// Validation
// ==========
// - su-valid-columns [function]
// - su-valid-gutters [function]
// - su-valid-spread [function]


/// Check that a column setting is valid
///
/// @group x-private
/// @access private
///
/// @param {List | Number} $columns - Columns
///
/// @return {List | Number | Null} -
///   Return `$columns` input if valid, or `error`
@function su-valid-columns(
  $columns
) {
  @each $col in $columns {
    @if (type-of($col) != 'number') or not unitless($col) {
      @error '`$columns` must be a unitless number or list of unitless numbers.';
    }
  }

  @return $columns;
}


/// Check that a gutter setting is valid
///
/// @group x-private
/// @access private
///
/// @param {List | Number} $gutter - Gutter
///
/// @return {List | Number | Null} -
///   Return `$gutter` if valid, or `null`
@function su-valid-gutters(
  $gutters
) {
  @if (type-of($gutters) != 'number') or not unitless($gutters) {
    @error '`$gutters` must be a unitless number.';
  }

  @return $gutters;
}


/// Check that a spread setting is valid and ready for math
///
/// @group x-private
/// @access private
///
/// @param {String} $spread [su-get('spread')] -
///   Either `narrow`, `wide` or `wider`
///
/// @return {Number} -
///   Either `-1` for `narrow`, `0` for `wide` or `1` for `wider`
@function su-valid-spread (
  $spread: su-get('spread')
) {
  $valid: (
    'narrow': -1,
    'wide': 0,
    'wider': 1,
  );

  @if not map-has-key($valid, $spread) {
    @warn '`#{$spread}` is not a valid $spread. Use narrow, wide, or wider.';
    @return map-get($valid, 'narrow');
  }

  @return map-get($valid, $spread);
}
