/// Function to compute a gutter for a column
/// 
/// @access public
/// 
/// @param {Integer} $columns [susy-get('columns')] -
///     The number of columns in the grid
/// @param {Float}   $gutters [susy-get('gutters')] - 
///     The ratio of a gutter based on a column
/// @param {Length}  $column-width [susy-get('column-width')] - 
///     The width of a column; only used when `$math` is `static`
/// @param {String}  $math [susy-get('math')] - 
///     Either `fluid` or `static`
/// @param {String}  $spread [susy-get('spread')] - 
///     Either `narrow`, `wide` or `wider`
/// 
/// @return {Length} -
///     Return either a value expressed in `%` when `$math` is `fluid` or an absolute length with `$math` is static
/// 
/// @example scss - Compute a gutter
///   .foo {
///     padding: 0 gutter();
///   }
@function susy-gutter (
  $columns      : susy-get('columns'),
  $gutters      : susy-get('gutters'),
  $column-width : susy-get('column-width'),
  $math         : susy-get('math'),
  $spread       : susy-get('spread')
) {
  @if ($math == 'fluid') {
    @return percentage($gutters / su-sum($columns, $gutters, $spread));
  }

  @return ($gutters * $column-width);
}
