// Su Validation Tests
// ===================


@include test-module('Su Valid Columns [function]') {
  @include test('Symmetrical grids') {
    @include assert-equal(
      su-valid-columns(3),
      3,
      'A unitless number is a valid setting for columns');
  }

  @include test('Asymmetrical grids') {
    @include assert-equal(
      su-valid-columns(1 2 4 2),
      1 2 4 2,
      'A list of unitless numbers is a valid setting for columns');
  }
}


@include test-module('Su Valid Gutters [function]') {
  @include test('Unitless float') {
    @include assert-equal(
      su-valid-gutters(0.75),
      0.75,
      'A unitless number is a valid setting for gutters');
  }
}


@include test-module('Su Valid Spread [function]') {
  @include test('Keyword spread') {
    @include assert-equal(
      su-valid-spread('wider'),
      1,
      'Keyword is converted to a number for grid-math');
  }

  @include test('Number spread') {
    @include assert-equal(
      su-valid-spread(-1),
      -1,
      'Valid number is returned directly');
  }
}


@include test-module('Su Valid Span [function]') {
  @include test('Unitless float') {
    @include assert-equal(
      su-valid-span(0.75),
      0.75,
      'A unitless number is a valid setting for span');
  }
}


@include test-module('Su Valid Column Width [function]') {
  @include test('Length in any units') {
    @include assert-equal(
      su-valid-column-width(4em),
      4em,
      'Valid length returns unchanged');
  }
}


@include test-module('Su Valid Location [function]') {
  @include test('Numeric column position') {
    @include assert-equal(
      su-valid-location(2, 3, 1 2 3 5 8),
      3,
      'Valid position returns unchanged');
  }

  @include test('Initial position keyword') {
    @include assert-equal(
      su-valid-location(2, 'first', 2 4 6 8),
      1,
      'Valid initial keyword returns 1');
  }

  @include test('Final position keyword') {
    @include assert-equal(
      su-valid-location(2, 'last', 2 4 6 8),
      3,
      'Final keyword returns calculated position from end');
  }

  @include test('No location given for symmetrical grid') {
    @include assert-equal(
      su-valid-location(2, null, 12),
      null,
      'Null location is valid for symmetrical grids');
  }
}
