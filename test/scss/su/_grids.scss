// Column Math Tests
// =================


@include test-module('Su Is Symmetrical [function]') {
  @include test('Symmetrical') {
    @include assert-true(
      su-is-symmetrical(3),
      'Numbers represent a symmetrical grid');
  }

  @include test('Asymmetrical') {
    @include assert-false(
      su-is-symmetrical(1 1 2 3 5 8),
      'Lists of numbers represent an asymmetrical grid');
  }

  @include test('Asymmetrical [one-column]') {
    $list: (4,);

    @include assert-false(
      su-is-symmetrical($list),
      'Single-item lists represent a (dumb) asymmetrical grid');
  }
}


@include test-module('Su Count [function]') {
  @include test('Count the columns in a symmetrical grid') {
    @include assert-equal(
      su-count(12),
      12,
      'Input and output should be the same.');
  }

  @include test('Count the columns in an asymmetrical grid') {
    @include assert-equal(
      su-count(1 1 2 3 5 8),
      length(1 1 2 3 5 8),
      'Output should equal list length.');
  }
}


@include test-module('Su Sum [function]') {
  @include test('Calculate the total units in a symmetrical grid') {
    @include assert-equal(
      su-sum(9, 0.5, 'wider'),
      14,
      'Returns combined column and gutter units');
  }

  @include test('Calculate the total units in an asymmetrical grid') {
    @include assert-equal(
      su-sum(1 2 3 1 2, 0.25),
      10,
      'Returns combined column and gutter units');
  }
}


@include test-module('Su Slice [function]') {
  @include test('Slice a symmetrical grid') {
    @include assert-equal(
      su-slice(8, 20, 3),
      8,
      'Slice should equal $span, no matter what the $location or $columns');
  }

  @include test('Slice an asymmetrical grid') {
    @include assert-equal(
      su-slice(3, 3, 1 1 2 3 5 8),
      2 3 5,
      'Returns subset of asymmetrical columns based on span and location');
  }
}


@include test-module('Su [function]') {
  @include test('Symmetrical') {
    @include assert-equal(
      su(5, 1, 8, 0.25, 'narrow'),
      6,
      'Symmetrical output is equal to the column-sum of the span');
  }

  @include test('Asymmetrical') {
    @include assert-equal(
      su(3, 2, 1 3 2 4 2, 0.25, 'wider'),
      10,
      'Asymmetrical output is equal to the column-sum of a subset slice');
  }
}
